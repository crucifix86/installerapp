<Window x:Class="installerapp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="{DynamicResource Title}"
        Height="750" Width="900"
        MinWidth="750"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Background="#1e1e1e"
        ResizeMode="CanResize">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <SolidColorBrush x:Key="PrimaryBackground" Color="#1e1e1e"/>
        <SolidColorBrush x:Key="SecondaryBackground" Color="#2d2d30"/>
        <SolidColorBrush x:Key="AccentColor" Color="#007acc"/>
        <SolidColorBrush x:Key="AccentHover" Color="#1f9bcf"/>
        <SolidColorBrush x:Key="TextPrimary" Color="#ffffff"/>
        <SolidColorBrush x:Key="TextSecondary" Color="#cccccc"/>
        <SolidColorBrush x:Key="BorderColor" Color="#404040"/>
        <SolidColorBrush x:Key="SuccessColor" Color="#16c60c"/>
        <SolidColorBrush x:Key="WarningColor" Color="#ff8c00"/>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="{StaticResource AccentColor}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModernScrollBar" TargetType="{x:Type ScrollBar}">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Height" Value="8" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid>
                                    <Border CornerRadius="4" Background="#424242"/>
                                    <Track Name="PART_Track" IsDirectionReversed="False">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}" Height="8" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid>
                                    <Border CornerRadius="4" Background="#424242"/>
                                    <Track Name="PART_Track" IsDirectionReversed="True">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbStyle}" Width="8" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AccentColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Padding" Value="20,12"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource AccentHover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#005a9e"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#555555"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolBarButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" Margin="8,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Background="{StaticResource SecondaryBackground}" BorderThickness="1" BorderBrush="{StaticResource BorderColor}" CornerRadius="4">
                                        <ScrollViewer Margin="4,6,4,6">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModernGroupBox" TargetType="GroupBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="{StaticResource AccentColor}" CornerRadius="6,6,0,0" Padding="12,6">
                                <ContentPresenter ContentSource="Header" TextBlock.Foreground="White" TextBlock.FontWeight="SemiBold" TextBlock.FontSize="13"/>
                            </Border>
                            <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0,0,6,6" Padding="{TemplateBinding Padding}">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModernLabel" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
        </Style>
        <Style x:Key="ModernTabControl" TargetType="TabControl">
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="ModernTabItem" TargetType="TabItem">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="0,0,0,2" BorderBrush="Transparent" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#3c3c3c"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderColor}"/>
        </Style>

    </Window.Resources>

    <TabControl Style="{StaticResource ModernTabControl}">
        <TabItem Header="{DynamicResource InstallerTab}" Style="{StaticResource ModernTabItem}">
            <Grid Margin="15">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="420" MinWidth="380"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*" MinWidth="300"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,10">
                        <TextBlock Text="Language:" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <ComboBox x:Name="cmbLanguage" SelectionChanged="cmbLanguage_SelectionChanged" Width="120" SelectedIndex="0">
                            <ComboBoxItem Content="English" Tag="en-US"/>
                            <ComboBoxItem Content="Indonesian" Tag="id-ID"/>
                            <ComboBoxItem Content="Русский" Tag="ru-RU"/>
                            <ComboBoxItem Content="中文" Tag="zh-CN"/>
                            <ComboBoxItem Content="Português" Tag="pt-BR"/>
                            <ComboBoxItem Content="Filipino" Tag="fil-PH"/>
                        </ComboBox>
                    </StackPanel>

                    <Border Grid.Row="0" Background="{StaticResource AccentColor}" CornerRadius="8" Padding="12" Margin="0,35,0,15">
                        <StackPanel>
                            <TextBlock Text="{DynamicResource HeaderText}" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                            <TextBlock Text="{DynamicResource SubHeaderText}" FontSize="11" Foreground="White" HorizontalAlignment="Center" Opacity="0.9" Margin="0,2,0,0"/>
                        </StackPanel>
                    </Border>

                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                        <StackPanel>
                            <GroupBox Header="{DynamicResource ServerConnectionGroup}" Style="{StaticResource ModernGroupBox}">
                                <StackPanel>
                                    <Label Content="{DynamicResource HostIpLabel}" Style="{StaticResource ModernLabel}"/>
                                    <TextBox x:Name="txtHost" Style="{StaticResource ModernTextBox}" Margin="0,0,0,8"/>

                                    <Label Content="{DynamicResource SshUsernameLabel}" Style="{StaticResource ModernLabel}"/>
                                    <TextBox x:Name="txtUsername" Style="{StaticResource ModernTextBox}" Margin="0,0,0,8"/>

                                    <Label x:Name="lblPassword" Content="{DynamicResource SshPasswordLabel}" Style="{StaticResource ModernLabel}"/>
                                    <PasswordBox x:Name="txtPassword" Style="{StaticResource ModernPasswordBox}" Margin="0,0,0,8"/>

                                    <CheckBox x:Name="chkUseSshKey" Content="{DynamicResource UseSshKeyCheckbox}" Foreground="{StaticResource TextSecondary}" VerticalContentAlignment="Center" Margin="0,5,0,8" Checked="chkUseSshKey_Checked"/>

                                    <StackPanel x:Name="pnlSshKey" Visibility="{Binding IsChecked, ElementName=chkUseSshKey, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Label Content="{DynamicResource PrivateKeyPathLabel}" Style="{StaticResource ModernLabel}"/>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox x:Name="txtKeyPath" Style="{StaticResource ModernTextBox}" IsReadOnly="True" Grid.Column="0"/>
                                            <Button x:Name="btnBrowseKey" Content="{DynamicResource BrowseButton}" Grid.Column="1" Click="btnBrowseKey_Click" Margin="8,0,0,0" Style="{StaticResource ToolBarButton}"/>
                                        </Grid>

                                        <Label Content="{DynamicResource KeyPassphraseLabel}" Style="{StaticResource ModernLabel}" Margin="0,8,0,5"/>
                                        <PasswordBox x:Name="txtKeyPassword" Style="{StaticResource ModernPasswordBox}"/>
                                    </StackPanel>

                                    <StackPanel Margin="0,15,0,0">
                                        <CheckBox x:Name="chkRunAsRoot" Content="{DynamicResource RunAsRootCheckbox}" Foreground="{StaticResource TextSecondary}" VerticalContentAlignment="Center"/>
                                        <PasswordBox x:Name="txtRootPassword" Style="{StaticResource ModernPasswordBox}" Margin="0,5,0,0" Visibility="{Binding IsChecked, ElementName=chkRunAsRoot, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                    <StackPanel Margin="0,15,0,0">
                                        <CheckBox x:Name="chkUseSudo" Content="Run with sudo" Foreground="{StaticResource TextSecondary}" VerticalContentAlignment="Center"/>
                                        <PasswordBox x:Name="txtSudoPassword" Style="{StaticResource ModernPasswordBox}" Margin="0,5,0,0" Visibility="{Binding IsChecked, ElementName=chkUseSudo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="{DynamicResource ServerVersionGroup}" Style="{StaticResource ModernGroupBox}">
                                <ComboBox x:Name="cmbVersion" Style="{StaticResource ModernComboBox}"/>
                            </GroupBox>

                            <GroupBox Header="{DynamicResource DatabaseOptionsGroup}" Style="{StaticResource ModernGroupBox}">
                                <StackPanel>
                                    <Label Content="{DynamicResource DbPasswordLabel}" Style="{StaticResource ModernLabel}"/>
                                    <TextBox x:Name="txtDbPassword" Style="{StaticResource ModernTextBox}"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>

                    <StackPanel Grid.Row="2" VerticalAlignment="Bottom" Margin="0,15,0,0">
                        <Button x:Name="btnInstall" Content="{DynamicResource BeginInstallationButton}" Style="{StaticResource ModernButton}" Click="btnInstall_Click" Margin="0,0,0,8"/>
                        <Button x:Name="btnInstallPanel" Content="{DynamicResource InstallPanelButton}" Click="btnInstallPanel_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ModernButton}">
                                    <Setter Property="Background" Value="{StaticResource SuccessColor}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#18d10d"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="#12a009"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="#555555"/>
                                            <Setter Property="Foreground" Value="#888888"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Grid>
                <GridSplitter Grid.Column="1" Width="2" Background="{StaticResource BorderColor}" HorizontalAlignment="Center" VerticalAlignment="Stretch"/>

                <GroupBox Header="{DynamicResource InstallationLogGroup}" Grid.Column="2" Style="{StaticResource ModernGroupBox}" Margin="0">
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <TextBox x:Name="txtLog" IsReadOnly="True" Background="#1a1a1a" Foreground="#e0e0e0" FontFamily="Consolas, Monaco, 'Courier New'" FontSize="12" TextWrapping="Wrap" BorderThickness="0" Padding="15" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"/>
                    </ScrollViewer>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="{DynamicResource FtpTab}" Style="{StaticResource ModernTabItem}">
            <Grid Margin="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <ToolBar Grid.Row="0" Margin="0,0,0,5" Background="Transparent">
                    <Button x:Name="btnSftpConnect" Content="{DynamicResource ConnectButton}" Style="{StaticResource ToolBarButton}" Click="btnSftpConnect_Click"/>
                    <Button x:Name="btnSftpDisconnect" Content="{DynamicResource DisconnectButton}" Style="{StaticResource ToolBarButton}" Click="btnSftpDisconnect_Click" IsEnabled="False"/>
                    <Separator/>
                    <Button x:Name="btnSftpUpload" Content="{DynamicResource UploadButton}" Style="{StaticResource ToolBarButton}" Click="btnSftpUpload_Click" IsEnabled="False"/>
                    <Button x:Name="btnSftpDownload" Content="{DynamicResource DownloadButton}" Style="{StaticResource ToolBarButton}" Click="btnSftpDownload_Click" IsEnabled="False"/>
                    <Button x:Name="btnSftpEdit" Content="{DynamicResource EditButton}" Style="{StaticResource ToolBarButton}" Click="btnSftpEdit_Click" IsEnabled="False"/>
                    <Separator/>
                    <Button x:Name="btnNewFile" Content="{DynamicResource NewFileButton}" Style="{StaticResource ToolBarButton}" Click="btnNewFile_Click" IsEnabled="False"/>
                    <Button x:Name="btnNewFolder" Content="{DynamicResource NewFolderButton}" Style="{StaticResource ToolBarButton}" Click="btnNewFolder_Click" IsEnabled="False"/>
                </ToolBar>

                <TextBox x:Name="txtRemotePath" Grid.Row="1" Style="{StaticResource ModernTextBox}" IsReadOnly="True" Margin="0,0,0,10"/>

                <ListView x:Name="lvFiles" Grid.Row="2" Background="{StaticResource SecondaryBackground}" BorderBrush="{StaticResource BorderColor}" Foreground="{StaticResource TextPrimary}" MouseDoubleClick="lvFiles_MouseDoubleClick">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{DynamicResource SetPermissionsMenu}" Click="PermissionsMenuItem_Click"/>
                            <MenuItem Header="{DynamicResource DeleteMenu}" Click="DeleteMenuItem_Click"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="GridViewColumnHeader">
                                    <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn Header="{DynamicResource NameColumn}" DisplayMemberBinding="{Binding Name}" Width="300"/>
                            <GridViewColumn Header="{DynamicResource SizeColumn}" DisplayMemberBinding="{Binding Size}" Width="120"/>
                            <GridViewColumn Header="{DynamicResource PermissionsColumn}" DisplayMemberBinding="{Binding Permissions}" Width="100"/>
                            <GridViewColumn Header="{DynamicResource ModifiedColumn}" DisplayMemberBinding="{Binding LastWriteTime, StringFormat='{}{0:yyyy-MM-dd HH:mm:ss}'}" Width="180"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </TabItem>
        <TabItem Header="{DynamicResource SqlDatabaseTab}" Style="{StaticResource ModernTabItem}">
            <Grid Margin="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="{DynamicResource ConnectionGroup}" Style="{StaticResource ModernGroupBox}">
                    <StackPanel Orientation="Vertical">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource DbTypeLabel}" Margin="5" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" x:Name="cmbDbType" Style="{StaticResource ModernComboBox}" Margin="5">
                                <ComboBoxItem Content="{DynamicResource SqlServerItem}"/>
                                <ComboBoxItem Content="{DynamicResource MySqlItem}"/>
                            </ComboBox>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource ServerLabel}" Margin="5" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" x:Name="txtSqlServer" Margin="5" Style="{StaticResource ModernTextBox}"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="{DynamicResource PortLabel}" Margin="5" Foreground="{StaticResource TextSecondary}" VerticalAlignment="center"/>
                            <TextBox Grid.Row="1" Grid.Column="3" x:Name="txtSqlPort" Margin="5" Style="{StaticResource ModernTextBox}"/>
                            <TextBlock Grid.Row="1" Grid.Column="4" Text="{DynamicResource DatabaseLabel}" Margin="5" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="5" x:Name="txtSqlDatabase" Margin="5" Style="{StaticResource ModernTextBox}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource UserLabel}" Margin="5" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" x:Name="txtSqlUser" Margin="5" Style="{StaticResource ModernTextBox}"/>
                            <TextBlock Grid.Row="2" Grid.Column="2" Text="{DynamicResource PasswordLabel}" Margin="5" Foreground="{StaticResource TextSecondary}" VerticalAlignment="Center"/>
                            <PasswordBox Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="3" x:Name="txtSqlPassword" Margin="5" Style="{StaticResource ModernPasswordBox}"/>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Button x:Name="btnSqlConnection" Content="{DynamicResource ConnectSqlButton}" Margin="5,0" Click="btnSqlConnection_Click" Style="{StaticResource ToolBarButton}"/>
                            <Button x:Name="btnSqlDisconnect" Content="{DynamicResource DisconnectSqlButton}" Margin="5,0" IsEnabled="False" Click="btnSqlDisconnect_Click" Style="{StaticResource ToolBarButton}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <Grid Grid.Row="1" Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Grid.Column="0" Header="{DynamicResource TablesGroup}" Style="{StaticResource ModernGroupBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ListView Grid.Row="0" x:Name="lvTables" Background="{StaticResource SecondaryBackground}" BorderBrush="{StaticResource BorderColor}" Foreground="{StaticResource TextPrimary}" SelectionChanged="lvTables_SelectionChanged">
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource ViewDataMenu}" Click="ViewTableDataMenuItem_Click"/>
                                        <MenuItem Header="{DynamicResource DropTableMenu}" Click="DropTableMenuItem_Click"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,0">
                                <Button x:Name="btnNewTable" Content="{DynamicResource NewTableButton}" IsEnabled="False" Style="{StaticResource ToolBarButton}" Padding="8,5" Click="btnNewTable_Click"/>
                                <Button x:Name="btnRefreshTables" Content="{DynamicResource RefreshButton}" IsEnabled="False" Margin="5,0,0,0" Style="{StaticResource ToolBarButton}" Padding="8,5" Click="btnRefreshTables_Click"/>
                            </StackPanel>
                        </Grid>
                    </GroupBox>

                    <GridSplitter Grid.Column="1" Width="2" Background="{StaticResource BorderColor}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="5,0"/>

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DataGrid Grid.Row="0" x:Name="dgSqlResults" Margin="0" IsReadOnly="False" AutoGenerateColumns="True"/>
                        <GroupBox Grid.Row="1" Header="{DynamicResource SqlQueryGroup}" Style="{StaticResource ModernGroupBox}" Margin="0,10,0,0">
                            <StackPanel Orientation="Vertical">
                                <TextBox x:Name="txtSqlQuery" AcceptsReturn="True" Height="100" Margin="0,0,0,5" Style="{StaticResource ModernTextBox}"/>
                                <Button x:Name="btnExecuteSql" Content="{DynamicResource ExecuteButton}" IsEnabled="False" Click="btnExecuteSql_Click" Style="{StaticResource ModernButton}" HorizontalAlignment="Right"/>
                            </StackPanel>
                        </GroupBox>
                    </Grid>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Clients" Style="{StaticResource ModernTabItem}">
            <StackPanel Margin="15">
                <TextBlock Margin="5" >
                    <Hyperlink NavigateUri="https://havenpwi.net/install2/Installer/Clients/151+fixed.zip" RequestNavigate="Hyperlink_RequestNavigate">
                        Perfect World 151
                    </Hyperlink>
                </TextBlock>
                <TextBlock Margin="5">
                    <Hyperlink NavigateUri="https://havenpwi.net/install2/Installer/Clients/PW153EN.zip" RequestNavigate="Hyperlink_RequestNavigate">
                        Perfect World 153
                    </Hyperlink>
                </TextBlock>
                <TextBlock Margin="5">
                    <Hyperlink NavigateUri="https://havenpwi.net/install2/Installer/Clients/Perfect+World+International+155+v159.zip" RequestNavigate="Hyperlink_RequestNavigate">
                        Perfect World 155
                    </Hyperlink>
                </TextBlock>
            </StackPanel>
        </TabItem>
    </TabControl>
</Window>